{
  // Place your booking-app-web workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "reactFunctionalComponent": {
    "scope": "typescript, typescriptreact",
    "prefix": "rfc",
    "body": [
      "import React from 'react';",
      "",
      "export type $1Props = {",
      "  className?: string;$2",
      "}",
      "",
      "function $1({$3}: $1Props) {",
      "  $4",
      "  return <div />;",
      "}",
      "",
      "$1.displayName = '$1'",
      "export default $1;"
    ],
    "description": "Create ReactJS Functional Component Typescript"
  },
  "componentVoidFunctionalTypescript": {
    "scope": "typescript, typescriptreact",
    "prefix": "rfcc",
    "body": [
      "import React, { ReactNode } from 'react';",
      "",
      "export type $1Props = {",
      "  children?: ReactNode;",
      "  className?: string;$2",
      "}",
      "",
      "function $1({children$3}: $1Props) {",
      "  $4",
      "  return <div />;",
      "}",
      "",
      "$1.displayName = '$1'",
      "export default $1;"
    ],
    "description": "Create ReactJS Functional Component With Children Typescript"
  }
}